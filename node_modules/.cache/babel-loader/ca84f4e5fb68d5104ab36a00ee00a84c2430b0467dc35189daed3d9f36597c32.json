{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{ThemeProvider as MuiThemeProvider,createTheme}from'@mui/material/styles';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};const themeConfig=createTheme({palette:{mode:theme,// Automatically switches between light and dark mode\nprimary:{main:'#007bff'},secondary:{main:'#ff3333'},text:{primary:theme==='dark'?'#2c3e50':'#2c3e50'// Keep text color consistent\n}},typography:{h2:{fontFamily:'Arial Black, sans-serif',color:'#2c3e50'// Ensure the heading color stays the same\n},body1:{fontFamily:'Georgia, serif',color:'#2c3e50'// Ensure the body text color stays the same\n}}});return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:/*#__PURE__*/_jsx(MuiThemeProvider,{theme:themeConfig,children:children})});};export const useTheme=()=>{return useContext(ThemeContext);};","map":{"version":3,"names":["React","createContext","useState","useContext","ThemeProvider","MuiThemeProvider","createTheme","jsx","_jsx","ThemeContext","_ref","children","theme","setTheme","toggleTheme","prevTheme","themeConfig","palette","mode","primary","main","secondary","text","typography","h2","fontFamily","color","body1","Provider","value","useTheme"],"sources":["C:/Users/kayun/WorkProject/hformalawi/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { ThemeProvider as MuiThemeProvider, createTheme } from '@mui/material/styles';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  const themeConfig = createTheme({\n    palette: {\n      mode: theme, // Automatically switches between light and dark mode\n      primary: {\n        main: '#007bff',\n      },\n      secondary: {\n        main: '#ff3333',\n      },\n      text: {\n        primary: theme === 'dark' ? '#2c3e50' : '#2c3e50', // Keep text color consistent\n      },\n    },\n    typography: {\n      h2: {\n        fontFamily: 'Arial Black, sans-serif',\n        color: '#2c3e50', // Ensure the heading color stays the same\n      },\n      body1: {\n        fontFamily: 'Georgia, serif',\n        color: '#2c3e50', // Ensure the body text color stays the same\n      },\n    },\n  });\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <MuiThemeProvider theme={themeConfig}>\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAClE,OAASC,aAAa,GAAI,CAAAC,gBAAgB,CAAEC,WAAW,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtF,KAAM,CAAAC,YAAY,cAAGR,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAG,aAAa,CAAGM,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,OAAO,CAAC,CAE3C,KAAM,CAAAY,WAAW,CAAGA,CAAA,GAAM,CACxBD,QAAQ,CAAEE,SAAS,EAAMA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CACrE,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGV,WAAW,CAAC,CAC9BW,OAAO,CAAE,CACPC,IAAI,CAAEN,KAAK,CAAE;AACbO,OAAO,CAAE,CACPC,IAAI,CAAE,SACR,CAAC,CACDC,SAAS,CAAE,CACTD,IAAI,CAAE,SACR,CAAC,CACDE,IAAI,CAAE,CACJH,OAAO,CAAEP,KAAK,GAAK,MAAM,CAAG,SAAS,CAAG,SAAW;AACrD,CACF,CAAC,CACDW,UAAU,CAAE,CACVC,EAAE,CAAE,CACFC,UAAU,CAAE,yBAAyB,CACrCC,KAAK,CAAE,SAAW;AACpB,CAAC,CACDC,KAAK,CAAE,CACLF,UAAU,CAAE,gBAAgB,CAC5BC,KAAK,CAAE,SAAW;AACpB,CACF,CACF,CAAC,CAAC,CAEF,mBACElB,IAAA,CAACC,YAAY,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,KAAK,CAAEE,WAAY,CAAE,CAAAH,QAAA,cACnDH,IAAA,CAACH,gBAAgB,EAACO,KAAK,CAAEI,WAAY,CAAAL,QAAA,CAClCA,QAAQ,CACO,CAAC,CACE,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAmB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,MAAO,CAAA3B,UAAU,CAACM,YAAY,CAAC,CACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}